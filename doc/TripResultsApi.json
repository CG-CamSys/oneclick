//Request
// (/<locale>)/users/2/trips/2.json
// e.g. /users/2/trips/2.json or /es/users/2/trips/2.json
// or /users/2/trips/2 with Accept: header that prefers JSON response
// or render in a template with: TripSerializer.new(@trip).to_json
//Response
// Items are REQUIRED unless "Opt" is indicated
{
    "status": "Number", // 0=error, 1=success. Any other values currently undefined.
    "status_text": "String Opt", // if status==0, may be present with an error message.
    "trip_parts": [ // Trips in order (from Origin 1 -> Dest 1, then Origin 2 -> Dest 2, etc.
        {
            "trip_part_id": "Number", //ActiveRecord ID
            "is_depart_at": "Boolean", // If true, trip planned as depart-at, if false, trip planned as arrive-by
            "description": "String", // Textual description of trip, e.g. "Outbound - 40 Courtland Street NE Atlanta, GA 30308 to Atlanta VA Medical Center"
            "start_time": "String", // Start Time requested by user if "depart_by", earliest leaving time (perhaps with a fudge factor) if "arrive_by". Null if unspecified by the user.
            "end_time": "String", // Latest arriving time if "depart_by", user requested time if "arrive_by" Null if unspecified by the user.
            "min_ui_duration": "Integer Opt", // minimum time range the UI should show
            "max_ui_duration": "Integer Opt", // maximum time range the UI should show
            "itineraries": [ // List of potential itineraries
                { // individual itinerary
                    "id": "Number", // ActiveRecord ID
                    "missing_information": [ // Missing info is add'l information that services require travelers to match
                        // empty array if there is none
                        {
                            "question": "String", // The question to ask the user, e.g. "Are you a military veteran?"
                            //"description": "String", // A description of information required from user, e.g. "You must be a military veteran to use this service." (Droped)
                            "data_type": "String", // Data type of response required.  Options determined by Eligibility Questions
                            "control_type": "String", // UNDER DISCUSSION Type of UI control, e.g., radio, checkbox, dropdown, datetimepicker, etc. Options determined by Eligibility Questions
                            "options": [ // Options available to the user for selection.
                                // empty array if data_type doesn't use options
                                { //An individual selection option
                                    "text": "String", // Displayable description of option
                                    "value": "String", // Internal value of option (for instance on checkbox or radiobutton)
                                },
                            ],
                            "success_condition": "String" // Value to compare against the chosen option, e.g. ">=65", "==1" (for radio button or checkbox)
                        },
                    ],
                    "mode": "String", // t(Mode.code)
                    "mode_name": "String", // Mode.name
                    "service_name": "String", // Service.name if mode is service, null otherwise
                    "contact_information": { // Contact information for service/provider/mode
                        "url": "String Opt", // url to go to if user clicks icon
                        "text": "String Opt" // contact information text
                        // additional components possible, TBD
                    },
                    "cost": {
                        "price": "Number", // Number if a cost is displayable (a straightforward number), else null
                        "comments": "String Opt" // Any textural information pertaining to price.  For display if a simple price is not available.
                    },
                    "duration": {
                        "external_duration": "String Opt", // (seconds) Textural description of duration, for display to users
                        "sortable_duration": "Number Opt", // (seconds) For filtering purposes, not display
                        "total_walk_time": "Number Opt", // (seconds) 
                        "total_walk_dist": "Number Opt", // (feet?) 
                        "total_transit_time": "Number Opt", // (seconds) 
                        "total_wait_time": "Number Opt", // (seconds) 
                    },
                    "transfers": "Number", // 0 if no transfers
                    "start_time": "String", // UTC time of start of itinerary, per ISO 8601. Null if unknown.
                    "end_time": "String", // UTC time of end of itinerary, per ISO 8601. Null if unknown.
                    "start_time_adj": "String", // start_time adjusted by +(0.5 * service_window). Null if start_time unknown
                    "service_window": "Integer", // service's service window (e.g. window for commitment of pickup), in minutes
                    "legs": [ //Each portion of the itinerary, equivalent to a single colored box within a racelane from the wireframes
                        {
                            "type": "String", // "String" description of the leg ("wait"/"bus"/"walk" etc...)
                            "description": "String", // Textural description of the step involved, e.g. "Walk to Bleecker St"
                            "start_time": "String", // UTC time of start of leg, per ISO 8601
                            "end_time": "String", // UTC time of end of leg, per ISO 8601
                            "start_place": "String Opt", // Allows Google Street Viewing of location. Format: lat,long or textual description. See https://developers.google.com/maps/documentation/streetview/#url_parameters
                            "end_place": "String Opt", // Allows Google Street Viewing of location
                        }
                    ]
                }
            ]
        }
    ]
}