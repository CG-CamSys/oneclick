#eligibility_form

  .row-fluid
    .span12
      = simple_form_for @user_characteristics_proxy, :url => path, :method => 'put', :remote => not(inline)  do |f|
        = f.error_notification
        .eligibility-question{ :data => {:index => 0}}
          = render partial: 'characteristics/eligibility_alert', locals: {inline: inline}
        %div{ :data => {:index => 1}}
          .input-header
            .step-number Step 1 of 3
            .step-title Questions
            %span.extend-me
          %table#characteristics_one.pull-right
            %thead 
              %tr 
                %th 
                %th Yes
                %th No
                %th Unsure
            %tbody 
              -TravelerCharacteristic.personal_factors.where(:datatype => 'bool').each do |characteristic|
                %tr 
                  %td
                    = f.label characteristic.note 
                  %td 
                    = f.radio_button characteristic.code.to_sym, true
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'yes', :value => true
                  %td 
                    = f.radio_button characteristic.code.to_sym, false
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'no', :value => false
                  %td 
                    = f.radio_button characteristic.code.to_sym, "na"
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'unsure', :value => "na"
              -TravelerCharacteristic.personal_factors.where(:datatype => 'disabled').each do |characteristic|
                %tr 
                  %td
                    = f.label characteristic.note + " (not yet available)", :class => 'disabled'
                  %td 
                    = f.radio_button characteristic.code.to_sym, true
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'yes', :value => true, disabled: true
                  %td 
                    = f.radio_button characteristic.code.to_sym, false
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'no', :value => false, disabled: true
                  %td 
                    = f.radio_button characteristic.code.to_sym, "na"
                    = f.label characteristic.code.to_sym, nil, :text => nil, :class => 'unsure', :value => "na", disabled: true
      

        / -TravelerCharacteristic.personal_factors.where(:datatype => 'disabled').each do |characteristic|
        /   = f.input characteristic.code.to_sym, collection: [[true, 'Yes'], [false, 'No'], ['na', 'Not sure']], :required => false, as: :radio_buttons, label: characteristic.note + " (not yet available)", label_method: :last, value_method: :first, :item_wrapper_class => "inline", disabled: true
        .dob-temp{ :data => {:index => 2}}
          / = f.input :date_of_birth, :as => :date, :start_year => Date.today.year - 12, :end_year => 1900, :required => false, :prompt => %w[t(:month) t(:day) t(:year)], :input_html => {:style => "width:auto;"}
          .dob.row-fluid
            .dob-breadcrumb
              %ul
                %li.month.current 
                  %span.type  Month
                  %span.input
                %li.day
                  
                  %span.type  Day
                  %span.input 
                %li.year 
                  
                  %span.type  Year
                  %span.input 
          .row-fluid
            #monthtable.dob-section.hidden
              %ul
                %li January
                %li February
                %li March
                %li April
              %ul 
                %li May
                %li June
                %li July
                %li August
              %ul 
                %li September
                %li October
                %li November
                %li December
            #daytable.dob-section.hidden
              %ul 
                %li 1
                %li 2
                %li 3
                %li 4
                %li 5
                %li 6
                %li 7
                %li 8
              %ul 
                %li #
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
              %ul 
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
                %li ##
              %ul 
                %li.bottom ##
                %li.bottom ##
                %li.bottom ##
                %li.bottom ##
                %li.bottom ##
                %li.bottom ##
                %li.bottom ##
                %li.ninja
            #yeartable.dob-section
              .decade-prev.span3
                .prev-container
                  .prev-btn
              #yearlist.span6
                %ul
                  %li 1960
                  %li 1961
                %ul
                  %li 1962
                  %li 1963
                %ul
                  %li 1964
                  %li 1965
                %ul
                  %li 1966
                  %li 1967
                %ul
                  %li 1968
                  %li 1969
              .decade-next.span3
                .next-container
                  .next-btn


        
        - if inline
          = button_tag :type => 'submit', :class => "btn btn-primary hidden" do
            %i.icon.icon-arrow-right
            Next step
            / = t(:save)
        - else
          = button_tag type: :submit, class: 'btn btn-primary controls hidden' do
            %i.icon.icon-ok
            = t(:update)
        = link_to :back, :class => "cancel_link hidden" do
          %i.icon.icon-reply
          = t(:cancel)

  / SO...somehow we gotta get that to look like this.
        
:javascript
  var dobFirst;
  $(document).ready(function() { 
    
    
    $('#monthtable ul li').on('click', function(){
      dobFirst = $(this);
      $('#monthtable ul li').removeClass('selected');
      dobFirst.addClass('selected');
      $('.dob-breadcrumb li.month span.input').text(dobFirst.html());
      $('li.month span.type').addClass('val-added');
      $('#monthtable').fadeOut(function(){
        $('#daytable').fadeIn().removeClass('hidden');
        $('.dob-breadcrumb li.month').toggleClass('current chosen');
        $('.dob-breadcrumb li.day').addClass('current');
      });
    });

    characteristicsView = {};
    characteristicsView.indexCounter = 0;
    characteristicsView.formItems = [];

    characteristicsView.nextBtnHandler = function() {
      if(characteristicsView.indexCounter == 0){
        $('div.next-footer-container').removeClass('hidden');
      }
      if(characteristicsView.indexCounter == 2){
        $('#new_user_characteristics_proxy').submit();
      }
      //increment counter
      characteristicsView.indexCounter++;
      
      //trigger counter change event
      $('#eligibility_form').trigger('indexChange')
    }

    characteristicsView.indexChangeHandler = function() {
      //hide everything again
      characteristicsView.formItems.addClass('hidden');

      //find element matching current index
      var matchedElement = $('div[data-index="' + characteristicsView.indexCounter +  '"]');

      // matched element visible
      matchedElement.removeClass('hidden');
    }
  
    characteristicsView.init = function() {
      //cache all form items
      this.formItems = $('*[data-index]');
      this.formItems.addClass('hidden');
      
      
      $('#eligibility_form').on('indexChange', characteristicsView.indexChangeHandler);

      
      //add click handler to next button
      $('.next-step-btn, a#yes').on('click', characteristicsView.nextBtnHandler);

      //reveal first form item
      $('div[data-index="0"]').removeClass('hidden');

      
      $('input[name="user_characteristics_proxy[disabled]"]:radio').on('change', function(event) {
        $.ajax({
          url: 'header',
          data: {state: event.currentTarget.id},
          success: function(result) {
            $('#characteristics_header').html(result)
          }
        });
      });
    }

    //kick everything off
    characteristicsView.init();
    
  });
  
  



